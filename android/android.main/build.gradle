apply plugin: 'com.android.application'
apply from: '../sdktools.gradle'

android {

  useLibrary 'org.apache.http.legacy'

  dexOptions {
    javaMaxHeapSize "4g"
    jumboMode true
  }

  lintOptions {
    abortOnError false
  }

  packagingOptions {
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE'
  }

  compileSdkVersion project.getSDKIfPossible(23)
  buildToolsVersion project.getHighestAvailableTools("23.0.1")

  defaultConfig {
    minSdkVersion external.android.minSdkVersion
    targetSdkVersion external.android.sdkVersion
    applicationId "sneer.main"
    versionCode 28
    versionName "0.3.28"
    multiDexEnabled true
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  compile 'com.google.android.gms:play-services-gcm:8.4.0'
  compile('com.netflix.rxjava:rxjava-android:' + external.rx.version) {
    exclude group: 'com.netflix.rxjava'
  }
  compile project(':sneer-android-api')

  compile 'com.android.support:appcompat-v7:23.1.1'
  compile 'com.android.support:design:23.1.1'
  compile 'com.android.support:multidex:1.0.1'
}

def skummetArtifactsDir = '../../skummet-artifacts'
if (file("$skummetArtifactsDir/me.sneer/core").exists()) {
  println "skummet jar detected!"
  dependencies {
    compile 'me.sneer:core:+:skummet'
  }
  repositories {
    ivy { url skummetArtifactsDir }
  }
  repositories.remove(
    repositories.getByName('MavenLocal'))
} else if (file("../../core/build").exists()) {
  dependencies {
    compile 'me.sneer:core:+'
  }
} else {
    dependencies {
      compile 'me.sneer:crypto:+'
      compile 'me.sneer:sneer-java-api:+'
  }
}
